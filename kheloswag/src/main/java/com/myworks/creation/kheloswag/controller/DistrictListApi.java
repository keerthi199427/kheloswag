/**
 * NOTE: This class is auto generated by the swagger code generator program (unset).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.myworks.creation.kheloswag.controller;

import com.myworks.creation.kheloswag.model.DistrictError;
import com.myworks.creation.kheloswag.model.Districts;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;

@Api(value = "DistrictList", description = "the DistrictList API")
public interface DistrictListApi {

    Logger log = LoggerFactory.getLogger(DistrictListApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "List of districts in particular state", nickname = "getDistrictLists", notes = "", response = Districts.class, tags={ "District list", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Districts.class),
        @ApiResponse(code = 500, message = "successful operation", response = DistrictError.class) })
    @RequestMapping(value = "/v1/districts/{stateId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Districts> _getDistrictLists(@ApiParam(value = "ID of state to return districts",required=true) @PathVariable("stateId") Long stateId) {
        return getDistrictLists(stateId);
    }

    // Override this method
    default ResponseEntity<Districts> getDistrictLists(Long stateId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"districtsList\" : [ {    \"districtId\" : 1,    \"districtName\" : \"Vizag\",    \"creationTime\" : \"2019-10-11\",    \"modificationTime\" : \"2019-10-11\",    \"stateId\" : 1  }, {    \"districtId\" : 1,    \"districtName\" : \"Vizag\",    \"creationTime\" : \"2019-10-11\",    \"modificationTime\" : \"2019-10-11\",    \"stateId\" : 1  } ]}", Districts.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DistrictListApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
